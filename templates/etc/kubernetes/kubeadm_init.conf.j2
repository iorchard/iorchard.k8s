---
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: {{ kubeadm_token }}
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  advertiseAddress: {{ kube_apiserver_advertise_address }}
  bindPort: {{ kube_apiserver_bind_port }}
nodeRegistration:
  name: {{ ansible_hostname }}
  criSocket: {{ kubelet_container_runtime_endpoint }}
  taints: []
certificateKey: {{ kubeadm_certkey }}

---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: {{ kubernetes_version }}
clusterName: {{ kubernetes_cluster_name }}
networking:
  dnsDomain: {{ kubernetes_dns_domain }}
  podSubnet: {{ kubernetes_pod_subnet }}
  serviceSubnet: {{ kubernetes_service_subnet }}
controlPlaneEndpoint: {{ keepalived_vip }}:{{ haproxy_bind_port }}
certificatesDir: /etc/kubernetes/pki
imageRepository: {{ kubernetes_image_repository }}
apiServer:
  extraArgs:
    authorization-mode: Node,RBAC
  timeoutForControlPlane: 4m0s
controllerManager: {}
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/etcd
scheduler: {}
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
address: {{ kubelet_bind_address }}
failSwapOn: {{ kubelet_fail_swap_on | bool | lower }}
authentication:
  anonymous:
    enabled: false
  webhook:
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: Webhook
enforceNodeAllocatable:
  - pods
healthzBindAddress: 127.0.0.1
healthzPort: 10248
staticPodPath: {{ kubelet_static_pod_path }}
CgroupsPerQOS: {{ kubelet_cgroups_per_qos | bool | lower }}
cgroupDriver: {{ kubelet_cgroup_driver }}
kubeletCgroups: {{ kubelet_kubelet_cgroups }}
maxPods: {{ kubelet_max_pods }}
clusterDomain: {{ kubernetes_dns_domain }}
{% if kubelet_kube_reserved -%}
kubeReserved:
  {{ kubelet_kube_reserved | to_nice_yaml(indent=2) | indent(2) }}
{%- endif %}
{% if kubelet_system_reserved -%}
systemReserved:
  {{ kubelet_system_reserved | to_nice_yaml(indent=2) | indent(2) }}
{%- endif %}
{% if kubelet_eviction_hard -%}
evictionHard:
  {{ kubelet_eviction_hard | to_nice_yaml(indent=2) | indent(2) }}
{%- endif %}
resolvConf: {{ kubelet_resolv_conf }}
...
